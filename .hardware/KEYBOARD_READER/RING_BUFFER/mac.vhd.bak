library ieee;
use ieee.std_logic_1164.all;

entity memory_address_control is

    port (
        putget: in std_logic;
		  incput: in std_logic;
		  incget: in std_logic;
		  
		  full: out std_logic;
		  empty: out std_logic;
		  output: out std_logic_vector(3 downto 0)
    );

end memory_address_control;


architecture structural of memory_address_control is

	-- Imports the 4bit registry 
	component register_4bits_counter is
	
		port (
        CLK   : in std_logic;
        RESET : in std_logic;
        SET   : in std_logic;
        D     : in std_logic_vector(3 downto 0);
        EN    : in std_logic;
        Q     : out std_logic_vector(3 downto 0)
		);
		
	end component;
	
begin
	
	-- Instantiates the 4 bit register
	instance_registry_4bits_1 : register_4bits_counter
	
		port map (
			CLK   => CLK,
			RESET => reset,
			SET   => '0',
			D     => result_adder_4bits,
			EN    => CE,
			Q     => result_register_4bits
		);
		
	-- Instantiates the 4 bit register
	instance_registry_4bits_2 : register_4bits_counter
	
		port map (
			CLK   => CLK,
			RESET => reset,
			SET   => '0',
			D     => result_adder_4bits,
			EN    => CE,
			Q     => result_register_4bits
		);
		
		